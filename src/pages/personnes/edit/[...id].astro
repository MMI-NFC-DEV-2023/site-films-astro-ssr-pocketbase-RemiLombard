---
import Layout from "../../../layouts/Layout.astro";
import {
  PersonnesNationaliteOptions,
  PersonnesProfessionOptions,
  type PersonnesResponse,
} from "../../../pocketbase-typegen";
export const prerender = false;

const id = Astro.params.id;

const pb = Astro.locals.pb;

const personne = id
  ? await pb.collection("Personnes").getOne(id!)
  : ({} as PersonnesResponse);

if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  try {
    const personne = await (id
      ? pb.collection("Personnes").update(id, data)
      : pb.collection("Personnes").create(data));
  
    return Astro.redirect(
      `/personnes/${personne.id}-${encodeURIComponent(personne.nom)}`
    );
  } catch (error) {
    console.error(error);
    
  }
}

function formatDate(date: string) {
  return date ? new Date(date).toISOString().split("T")[0] : "";
}
---

<Layout pageTitle="Edit personne">
  <h1>Edit personne</h1>

  <form class="*:content grid grid-cols-2" method="post">
    <label
      >Prénom
      <input type="text" name="prenom" value={personne.prenom} />
    </label>

    <label
      >Nom
      <input type="text" name="nom" value={personne.nom} />
    </label>

    <label
      >Date de Naissance
      <input
        type="date"
        name="dateNaissance"
        value={formatDate(personne.dateNaissance)}
      />
    </label>

    <label
      >Lieu de Naissance
      <input type="text" name="lieuNaissance" value={personne.lieuNaissance} />
    </label>

    <label
      >Date de Décès
      <input
        type="date"
        name="dateDeces"
        value={formatDate(personne.dateDeces)}
      />
    </label>

    <label
      >Nationalité
      <select name="nationalite">
        {
          Object.entries(PersonnesNationaliteOptions).map(([key, value]) => (
            <option selected={personne.nationalite}>{key}</option>
          ))
        }
      </select>
    </label>

    <fieldset>
      <legend>Profession</legend>
      {
        Object.entries(PersonnesProfessionOptions).map(([key, value]) => (
          <label>
            {key}
            <input
              type="checkbox"
              name="profession"
              checked={personne.profession?.includes(value)}
              value={value}
            />
          </label>
        ))
      }
    </fieldset>
    <button>{id ? "Modifier" : "Ajouter"}</button>
  </form>
</Layout>
